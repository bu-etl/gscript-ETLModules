VERSION v2.2
CLEARLOG
LOADCONFIG
LOADCONFIG "" Config\etl_assembly_positions.txt

PRINT "START SCRIPT"

COPY $single_module 0
GETINTPOPUP $bot_chuck_num "Which module chuck are you using? [2,3,4]"

COPY $top1A_chuck_num 1
COPY $top1A_pos_num 5
COPY $top1B_chuck_num 1
COPY $top1B_pos_num 1
COPY $top1C_chuck_num 1
COPY $top1C_pos_num 6
COPY $top1D_chuck_num 1
COPY $top1D_pos_num 2

COPY $top2A_chuck_num 1
COPY $top2A_pos_num 7
COPY $top2B_chuck_num 1
COPY $top2B_pos_num 3
COPY $top2C_chuck_num 1
COPY $top2C_pos_num 8
COPY $top2D_chuck_num 1
COPY $top2D_pos_num 4

COPY $top3A_chuck_num 1
COPY $top3A_pos_num 13
COPY $top3B_chuck_num 1
COPY $top3B_pos_num 9
COPY $top3C_chuck_num 1
COPY $top3C_pos_num 14
COPY $top3D_chuck_num 1
COPY $top3D_pos_num 10

COPY $top4A_chuck_num 1
COPY $top4A_pos_num 15
COPY $top4B_chuck_num 1
COPY $top4B_pos_num 11
COPY $top4C_chuck_num 1
COPY $top4C_pos_num 16
COPY $top4D_chuck_num 1
COPY $top4D_pos_num 12

HOME if-needed

#set vaccuums
SETVAC "etl_chuck_{$top1A_chuck_num}_pos_{$top1A_pos_num}" 1 #for top piece 1A
SETVAC "etl_chuck_{$top1B_chuck_num}_pos_{$top1B_pos_num}" 1 #for top piece 1B
SETVAC "etl_chuck_{$top1C_chuck_num}_pos_{$top1C_pos_num}" 1 #for top piece 1C
SETVAC "etl_chuck_{$top1D_chuck_num}_pos_{$top1D_pos_num}" 1 #for top piece 1D

GOTOIF @END_VAC $single_module

SETVAC "etl_chuck_{$top2A_chuck_num}_pos_{$top2A_pos_num}" 1 #for top piece 2A
SETVAC "etl_chuck_{$top2B_chuck_num}_pos_{$top2B_pos_num}" 1 #for top piece 2B
SETVAC "etl_chuck_{$top2C_chuck_num}_pos_{$top2C_pos_num}" 1 #for top piece 2C
SETVAC "etl_chuck_{$top2D_chuck_num}_pos_{$top2D_pos_num}" 1 #for top piece 2D

SETVAC "etl_chuck_{$top3A_chuck_num}_pos_{$top3A_pos_num}" 1 #for top piece 3A
SETVAC "etl_chuck_{$top3B_chuck_num}_pos_{$top3B_pos_num}" 1 #for top piece 3B
SETVAC "etl_chuck_{$top3C_chuck_num}_pos_{$top3C_pos_num}" 1 #for top piece 3C
SETVAC "etl_chuck_{$top3D_chuck_num}_pos_{$top3D_pos_num}" 1 #for top piece 3D

SETVAC "etl_chuck_{$top4A_chuck_num}_pos_{$top4A_pos_num}" 1 #for top piece 4A
SETVAC "etl_chuck_{$top4B_chuck_num}_pos_{$top4B_pos_num}" 1 #for top piece 4B
SETVAC "etl_chuck_{$top4C_chuck_num}_pos_{$top4C_pos_num}" 1 #for top piece 4C
SETVAC "etl_chuck_{$top4D_chuck_num}_pos_{$top4D_pos_num}" 1 #for top piece 4D

@END_VAC

SETVAC etl_chuck_{$bot_chuck_num} 1  # vacuum for assembly plate
#SETVAC etl_chuck_2 1  # vacuum for assembly plate
#WAIT 500
#SETVAC etl_chuck_3 1  # vacuum for assembly plate
#WAIT 500
#SETVAC etl_chuck_4 1  # vacuum for assembly plate

PRINT "START MODULE FIDUCIAL ACQUISITION"

MOVENAME "etl_chuck_{$bot_chuck_num}"
CALL @SURVEY_PART $bot_chuck_num 1 0 -> $bot_pos_1 $bot_rot_1
GOTOIF @END_SURVEY_MODULE $single_module
CALL @SURVEY_PART $bot_chuck_num 2 0 -> $bot_pos_2 $bot_rot_2
CALL @SURVEY_PART $bot_chuck_num 3 0 -> $bot_pos_3 $bot_rot_3
CALL @SURVEY_PART $bot_chuck_num 4 0 -> $bot_pos_4 $bot_rot_4
@END_SURVEY_MODULE

PRINT "START SENSOR FIDUCIAL ACQUISITION"

MOVENAME "etl_chuck_{$top1A_chuck_num}" "" direct
CALL @SURVEY_PART $top1B_chuck_num $top1B_pos_num 1 -> $top1B_pos $top1B_rot
CALL @SURVEY_PART $top1D_chuck_num $top1D_pos_num 2 -> $top1D_pos $top1D_rot
GOTOIF @SKIP_SURVEY_SENSOR $single_module
CALL @SURVEY_PART $top2B_chuck_num $top2B_pos_num 1 -> $top2B_pos $top2B_rot
CALL @SURVEY_PART $top2D_chuck_num $top2D_pos_num 2 -> $top2D_pos $top2D_rot
CALL @SURVEY_PART $top2C_chuck_num $top2C_pos_num 2 -> $top2C_pos $top2C_rot
CALL @SURVEY_PART $top2A_chuck_num $top2A_pos_num 1 -> $top2A_pos $top2A_rot
@SKIP_SURVEY_SENSOR
CALL @SURVEY_PART $top1C_chuck_num $top1C_pos_num 2 -> $top1C_pos $top1C_rot
CALL @SURVEY_PART $top1A_chuck_num $top1A_pos_num 1 -> $top1A_pos $top1A_rot
GOTOIF @END_SURVEY_SENSOR $single_module
CALL @SURVEY_PART $top3B_chuck_num $top3B_pos_num 1 -> $top3B_pos $top3B_rot
CALL @SURVEY_PART $top3D_chuck_num $top3D_pos_num 2 -> $top3D_pos $top3D_rot
CALL @SURVEY_PART $top4B_chuck_num $top4B_pos_num 1 -> $top4B_pos $top4B_rot
CALL @SURVEY_PART $top4D_chuck_num $top4D_pos_num 2 -> $top4D_pos $top4D_rot
CALL @SURVEY_PART $top4C_chuck_num $top4C_pos_num 2 -> $top4C_pos $top4C_rot
CALL @SURVEY_PART $top4A_chuck_num $top4A_pos_num 1 -> $top4A_pos $top4A_rot
CALL @SURVEY_PART $top3C_chuck_num $top3C_pos_num 2 -> $top3C_pos $top3C_rot
CALL @SURVEY_PART $top3A_chuck_num $top3A_pos_num 1 -> $top3A_pos $top3A_rot
@END_SURVEY_SENSOR

PRINT "START PNP ON CHUCK %d" $bot_chuck_num

FLEXREAD $sensor_thick geometry.ETL_Sensor_PCB_Mockup.thickness # ETROC thickness
FLEXREAD $adh_thick geometry.ETL_Sensor_PCB_Mockup.adhesive_thickness # Adhesive thickness

# TODO: Adjust "bot_pos" to place the top parts in the correct positions
# Transform local sensor positions to global, then account for the sensor and adhesive thickness by SUB.
TRANSFORML2G $bot_pos_1A {-11.8,10.8,0}  $bot_pos_1 $bot_rot_1
TRANSFORML2G $bot_pos_1B {-11.8,-10.8,0} $bot_pos_1 $bot_rot_1
TRANSFORML2G $bot_pos_1C {11.8,10.8,0}   $bot_pos_1 $bot_rot_1
TRANSFORML2G $bot_pos_1D {11.8,-10.8,0}  $bot_pos_1 $bot_rot_1
#SUB $bot_pos_1A $bot_pos_1A $sensor_thick
#SUB $bot_pos_1A $bot_pos_1A $adh_thick
#SUB $bot_pos_1B $bot_pos_1B $sensor_thick
#SUB $bot_pos_1B $bot_pos_1B $adh_thick
#SUB $bot_pos_1C $bot_pos_1C $sensor_thick
#SUB $bot_pos_1C $bot_pos_1C $adh_thick
#SUB $bot_pos_1D $bot_pos_1D $sensor_thick
#SUB $bot_pos_1D $bot_pos_1D $adh_thick
GOTOIF @SKIP_L2G $single_module
TRANSFORML2G $bot_pos_2A {-11.8,10.8,0}  $bot_pos_2 $bot_rot_2
TRANSFORML2G $bot_pos_2B {-11.8,-10.8,0} $bot_pos_2 $bot_rot_2
TRANSFORML2G $bot_pos_2C {11.8,10.8,0}   $bot_pos_2 $bot_rot_2
TRANSFORML2G $bot_pos_2D {11.8,-10.8,0}  $bot_pos_2 $bot_rot_2
TRANSFORML2G $bot_pos_3A {-11.8,10.8,0}  $bot_pos_3 $bot_rot_3
TRANSFORML2G $bot_pos_3B {-11.8,-10.8,0} $bot_pos_3 $bot_rot_3
TRANSFORML2G $bot_pos_3C {11.8,10.8,0}   $bot_pos_3 $bot_rot_3
TRANSFORML2G $bot_pos_3D {11.8,-10.8,0}  $bot_pos_3 $bot_rot_3
TRANSFORML2G $bot_pos_4A {-11.8,10.8,0}  $bot_pos_4 $bot_rot_4
TRANSFORML2G $bot_pos_4B {-11.8,-10.8,0} $bot_pos_4 $bot_rot_4
TRANSFORML2G $bot_pos_4C {11.8,10.8,0}   $bot_pos_4 $bot_rot_4
TRANSFORML2G $bot_pos_4D {11.8,-10.8,0}  $bot_pos_4 $bot_rot_4
#SUB $bot_pos_2A $bot_pos_2A $sensor_thick
#SUB $bot_pos_2A $bot_pos_2A $adh_thick
#SUB $bot_pos_2B $bot_pos_2B $sensor_thick
#SUB $bot_pos_2B $bot_pos_2B $adh_thick
#SUB $bot_pos_2C $bot_pos_2C $sensor_thick
#SUB $bot_pos_2C $bot_pos_2C $adh_thick
#SUB $bot_pos_2D $bot_pos_2D $sensor_thick
#SUB $bot_pos_2D $bot_pos_2D $adh_thick
#SUB $bot_pos_3A $bot_pos_3A $sensor_thick
#SUB $bot_pos_3A $bot_pos_3A $adh_thick
#SUB $bot_pos_3B $bot_pos_3B $sensor_thick
#SUB $bot_pos_3B $bot_pos_3B $adh_thick
#SUB $bot_pos_3C $bot_pos_3C $sensor_thick
#SUB $bot_pos_3C $bot_pos_3C $adh_thick
#SUB $bot_pos_3D $bot_pos_3D $sensor_thick
#SUB $bot_pos_3D $bot_pos_3D $adh_thick
#SUB $bot_pos_4A $bot_pos_4A $sensor_thick
#SUB $bot_pos_4A $bot_pos_4A $adh_thick
#SUB $bot_pos_4B $bot_pos_4B $sensor_thick
#SUB $bot_pos_4B $bot_pos_4B $adh_thick
#SUB $bot_pos_4C $bot_pos_4C $sensor_thick
#SUB $bot_pos_4C $bot_pos_4C $adh_thick
#SUB $bot_pos_4D $bot_pos_4D $sensor_thick
#SUB $bot_pos_4D $bot_pos_4D $adh_thick
@SKIP_L2G

SETLIGHT 0
LOADTOOL etl_picker_tool

PICKPART $top1A_pos $top1A_rot "etl_chuck_{$top1A_chuck_num}_pos_{$top1A_pos_num}" "etl_chuck_{$top1A_chuck_num}"
PLACEPART $bot_pos_1A $bot_rot_1 "" "etl_chuck_{$bot_chuck_num}"

GOTOIF @CHUCK_2_MOVESAFE `$bot_chuck_num=i=2`
PICKPART $top1B_pos $top1B_rot "etl_chuck_{$top1B_chuck_num}_pos_{$top1B_pos_num}" ""
PLACEPART $bot_pos_1B $bot_rot_1 "" ""
GOTO @CONTINUE_PICK_PLACE
@CHUCK_2_MOVESAFE
PICKPART $top1B_pos $top1B_rot "etl_chuck_{$top1B_chuck_num}_pos_{$top1B_pos_num}" "etl_chuck_{$top1B_chuck_num}"
PLACEPART $bot_pos_1B $bot_rot_1 "" "etl_chuck_{$bot_chuck_num}"
@CONTINUE_PICK_PLACE

PICKPART $top1C_pos $top1C_rot "etl_chuck_{$top1C_chuck_num}_pos_{$top1C_pos_num}" "" #"etl_chuck_{$top1C_chuck_num}"
PLACEPART $bot_pos_1C $bot_rot_1 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top1D_pos $top1D_rot "etl_chuck_{$top1D_chuck_num}_pos_{$top1D_pos_num}" "" #"etl_chuck_{$top1D_chuck_num}"
PLACEPART $bot_pos_1D $bot_rot_1 "" "" #"etl_chuck_{$bot_chuck_num}"

GOTOIF @SKIP_PNP $single_module

PICKPART $top2A_pos $top2A_rot "etl_chuck_{$top2A_chuck_num}_pos_{$top2A_pos_num}" "" #"etl_chuck_{$top2A_chuck_num}"
PLACEPART $bot_pos_2A $bot_rot_2 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top2B_pos $top2B_rot "etl_chuck_{$top2B_chuck_num}_pos_{$top2B_pos_num}" "" #"etl_chuck_{$top2B_chuck_num}"
PLACEPART $bot_pos_2B $bot_rot_2 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top2C_pos $top2C_rot "etl_chuck_{$top2C_chuck_num}_pos_{$top2C_pos_num}" "" #"etl_chuck_{$top2C_chuck_num}"
PLACEPART $bot_pos_2C $bot_rot_2 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top2D_pos $top2D_rot "etl_chuck_{$top2D_chuck_num}_pos_{$top2D_pos_num}" "" #"etl_chuck_{$top2D_chuck_num}"
PLACEPART $bot_pos_2D $bot_rot_2 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top3A_pos $top3A_rot "etl_chuck_{$top3A_chuck_num}_pos_{$top3A_pos_num}" "" #"etl_chuck_{$top3A_chuck_num}"
PLACEPART $bot_pos_3A $bot_rot_3 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top3B_pos $top3B_rot "etl_chuck_{$top3B_chuck_num}_pos_{$top3B_pos_num}" "" #"etl_chuck_{$top3B_chuck_num}"
PLACEPART $bot_pos_3B $bot_rot_3 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top3C_pos $top3C_rot "etl_chuck_{$top3C_chuck_num}_pos_{$top3C_pos_num}" "" #"etl_chuck_{$top3C_chuck_num}"
PLACEPART $bot_pos_3C $bot_rot_3 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top3D_pos $top3D_rot "etl_chuck_{$top3D_chuck_num}_pos_{$top3D_pos_num}" "" #"etl_chuck_{$top3D_chuck_num}"
PLACEPART $bot_pos_3D $bot_rot_3 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top4A_pos $top4A_rot "etl_chuck_{$top4A_chuck_num}_pos_{$top4A_pos_num}" "" #"etl_chuck_{$top4A_chuck_num}"
PLACEPART $bot_pos_4A $bot_rot_4 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top4B_pos $top4B_rot "etl_chuck_{$top4B_chuck_num}_pos_{$top4B_pos_num}" "" #"etl_chuck_{$top4B_chuck_num}"
PLACEPART $bot_pos_4B $bot_rot_4 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top4C_pos $top4C_rot "etl_chuck_{$top4C_chuck_num}_pos_{$top4C_pos_num}" "" #"etl_chuck_{$top4C_chuck_num}"
PLACEPART $bot_pos_4C $bot_rot_4 "" "" #"etl_chuck_{$bot_chuck_num}"
PICKPART $top4D_pos $top4D_rot "etl_chuck_{$top4D_chuck_num}_pos_{$top4D_pos_num}" "" #"etl_chuck_{$top4D_chuck_num}"
PLACEPART $bot_pos_4D $bot_rot_4 "" "" #"etl_chuck_{$bot_chuck_num}"

@SKIP_PNP

UNLOADTOOL

#CALL @APPLY_WEIGHT $weightA_num $bot_chuck_num $bot_pos $bot_rot

MOVENAME "etl_chuck_{$bot_chuck_num}"
PRINT "START MEASUREMENT OF ASSEMBLED MODULES"
CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_1A $bot_rot_1 0 -> $pos_corr_1A $rot_corr_1A
CALL @PRINT_SURVEY_RESULTS $bot_pos_1A $bot_rot_1 $pos_corr_1A $rot_corr_1A $bot_chuck_num 1 1

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_1B $bot_rot_1 0 -> $pos_corr_1B $rot_corr_1B
CALL @PRINT_SURVEY_RESULTS $bot_pos_1B $bot_rot_1 $pos_corr_1B $rot_corr_1B $bot_chuck_num 1 2

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_1C $bot_rot_1 1 -> $pos_corr_1C $rot_corr_1C
CALL @PRINT_SURVEY_RESULTS $bot_pos_1C $bot_rot_1 $pos_corr_1C $rot_corr_1C $bot_chuck_num 1 3

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_1D $bot_rot_1 1 -> $pos_corr_1D $rot_corr_1D
CALL @PRINT_SURVEY_RESULTS $bot_pos_1D $bot_rot_1 $pos_corr_1D $rot_corr_1D $bot_chuck_num 1 4

GOTOIF @SKIP_MEASURE $single_module

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_2A $bot_rot_2 0 -> $pos_corr_2A $rot_corr_2A
CALL @PRINT_SURVEY_RESULTS $bot_pos_2A $bot_rot_2 $pos_corr_2A $rot_corr_2A $bot_chuck_num 2 1

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_2B $bot_rot_2 0 -> $pos_corr_2B $rot_corr_2B
CALL @PRINT_SURVEY_RESULTS $bot_pos_2B $bot_rot_2 $pos_corr_2B $rot_corr_2B $bot_chuck_num 2 2

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_2C $bot_rot_2 1 -> $pos_corr_2C $rot_corr_2C
CALL @PRINT_SURVEY_RESULTS $bot_pos_2C $bot_rot_2 $pos_corr_2C $rot_corr_2C $bot_chuck_num 2 3

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_2D $bot_rot_2 1 -> $pos_corr_2D $rot_corr_2D
CALL @PRINT_SURVEY_RESULTS $bot_pos_2D $bot_rot_2 $pos_corr_2D $rot_corr_2D $bot_chuck_num 2 4

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_3A $bot_rot_3 0 -> $pos_corr_3A $rot_corr_3A
CALL @PRINT_SURVEY_RESULTS $bot_pos_3A $bot_rot_3 $pos_corr_3A $rot_corr_3A $bot_chuck_num 3 1

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_3B $bot_rot_3 0 -> $pos_corr_3B $rot_corr_3B
CALL @PRINT_SURVEY_RESULTS $bot_pos_3B $bot_rot_3 $pos_corr_3B $rot_corr_3B $bot_chuck_num 3 2

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_3C $bot_rot_3 1 -> $pos_corr_3C $rot_corr_3C
CALL @PRINT_SURVEY_RESULTS $bot_pos_3C $bot_rot_3 $pos_corr_3C $rot_corr_3C $bot_chuck_num 3 3

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_3D $bot_rot_3 1 -> $pos_corr_3D $rot_corr_3D
CALL @PRINT_SURVEY_RESULTS $bot_pos_3D $bot_rot_3 $pos_corr_3D $rot_corr_3D $bot_chuck_num 3 4

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_4A $bot_rot_4 0 -> $pos_corr_4A $rot_corr_4A
CALL @PRINT_SURVEY_RESULTS $bot_pos_4A $bot_rot_4 $pos_corr_4A $rot_corr_4A $bot_chuck_num 4 1

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_4B $bot_rot_4 0 -> $pos_corr_4B $rot_corr_4B
CALL @PRINT_SURVEY_RESULTS $bot_pos_4B $bot_rot_4 $pos_corr_4B $rot_corr_4B $bot_chuck_num 4 2

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_4C $bot_rot_4 1 -> $pos_corr_4C $rot_corr_4C
CALL @PRINT_SURVEY_RESULTS $bot_pos_4C $bot_rot_4 $pos_corr_4C $rot_corr_4C $bot_chuck_num 4 3

CALL @SURVEY_CORRECTED $bot_chuck_num $bot_pos_4D $bot_rot_4 1 -> $pos_corr_4D $rot_corr_4D
CALL @PRINT_SURVEY_RESULTS $bot_pos_4D $bot_rot_4 $pos_corr_4D $rot_corr_4D $bot_chuck_num 4 4

@SKIP_MEASURE

SETLIGHT 0
movename home 50
SETVAC etl_chuck_{$bot_chuck_num} 0  # vacuum for assembly plate
#SETVAC etl_chuck_2 1  # vacuum for assembly plate
#WAIT 500
#SETVAC etl_chuck_3 1  # vacuum for assembly plate
#WAIT 500
#SETVAC etl_chuck_4 1  # vacuum for assembly plate

PRINT "END SCRIPT"

END

@PRINT_SURVEY_RESULTS(target_pos,target_rot,meas_pos,meas_rot,plate_num,module_num,chip_num)
    PRINT "CHUCK %d MODULE %d CHIP %d:" $plate_num $module_num $chip_num
    PRINT "    target: %v | %f deg" $target_pos $target_rot
    PRINT "    actual: %v | %f deg" $meas_pos $meas_rot
    SUB $pos_err $meas_pos $target_pos
    SUB $rot_err $meas_rot $target_rot
    PRINT "    delta:  %v | %f deg" $pos_err $rot_err
    RETURN

@SURVEY_CORRECTED(chuck_num,target_pos,target_rot,lr)
# Arguments:
    #  $chuck_num - 
    #  $pos - 
    #  $rot -
    #  $lr -

    SETLIGHT 15
    FLEXREAD $sensor_thick geometry.ETL_Sensor_PCB_Mockup.thickness # ETROC thickness
    FLEXREAD $adh_thick geometry.ETL_Sensor_PCB_Mockup.adhesive_thickness # Adhesive thickness
    GOTOIF @RIGHT $lr
    FLEXREAD $tr_local geometry.ETL_ETROC_PCB_Mockup_0.fid_tr
    FLEXREAD $tl_local geometry.ETL_ETROC_PCB_Mockup_0.fid_tl
    FLEXREAD $bl_local geometry.ETL_ETROC_PCB_Mockup_0.fid_bl
    FLEXREAD $br_local geometry.ETL_ETROC_PCB_Mockup_0.fid_br

    TRANSFORML2G $tr_global $tr_local $target_pos $target_rot
    TRANSFORML2G $tl_global $tl_local $target_pos $target_rot
    TRANSFORML2G $bl_global $bl_local $target_pos $target_rot
    TRANSFORML2G $br_global $br_local $target_pos $target_rot

    SUB $tr_global $tr_global $sensor_thick
    SUB $tr_global $tr_global $adh_thick
    SUB $tl_global $tl_global $sensor_thick
    SUB $tl_global $tl_global $adh_thick
    SUB $bl_global $bl_global $sensor_thick
    SUB $bl_global $bl_global $adh_thick
    SUB $br_global $br_global $sensor_thick
    SUB $br_global $br_global $adh_thick

    #this is to get corrected centers and orientation, the code above gives general area
    #MOVENAME "etl_chuck_{$chuck_num}"
    #Routine to set up inital position of metal piece
    CALL @ACQUIREFIDUCIAL $tl_global 1 -> $tl_corrected
    CALL @ACQUIREFIDUCIAL $tr_global 1 -> $tr_corrected
    CALL @ACQUIREFIDUCIAL $br_global 1 -> $br_corrected
    CALL @ACQUIREFIDUCIAL $bl_global 1 -> $bl_corrected
    FIT $pos $rot ETL_ETROC_PCB_Mockup_0 $tr_corrected $br_corrected $bl_corrected $tl_corrected
    QUAT2EULER $phi $_ $_ $rot
    RETURN $pos $phi
    @RIGHT
    FLEXREAD $tr_local geometry.ETL_ETROC_PCB_Mockup_1.fid_tr
    FLEXREAD $tl_local geometry.ETL_ETROC_PCB_Mockup_1.fid_tl
    FLEXREAD $bl_local geometry.ETL_ETROC_PCB_Mockup_1.fid_bl
    FLEXREAD $br_local geometry.ETL_ETROC_PCB_Mockup_1.fid_br

    TRANSFORML2G $tr_global $tr_local $target_pos $target_rot
    TRANSFORML2G $tl_global $tl_local $target_pos $target_rot
    TRANSFORML2G $bl_global $bl_local $target_pos $target_rot
    TRANSFORML2G $br_global $br_local $target_pos $target_rot

    SUB $tr_global $tr_global $sensor_thick
    SUB $tr_global $tr_global $adh_thick
    SUB $tl_global $tl_global $sensor_thick
    SUB $tl_global $tl_global $adh_thick
    SUB $bl_global $bl_global $sensor_thick
    SUB $bl_global $bl_global $adh_thick
    SUB $br_global $br_global $sensor_thick
    SUB $br_global $br_global $adh_thick

    #this is to get corrected centers and orientation, the code above gives general area
    #MOVENAME "etl_chuck_{$chuck_num}"
    #Routine to set up inital position of metal piece
    CALL @ACQUIREFIDUCIAL $tl_global 1 -> $tl_corrected
    CALL @ACQUIREFIDUCIAL $tr_global 1 -> $tr_corrected
    CALL @ACQUIREFIDUCIAL $br_global 1 -> $br_corrected
    CALL @ACQUIREFIDUCIAL $bl_global 1 -> $bl_corrected
    FIT $pos $rot ETL_ETROC_PCB_Mockup_1 $tr_corrected $br_corrected $bl_corrected $tl_corrected
    QUAT2EULER $phi $_ $_ $rot
    RETURN $pos $phi


@SURVEY_PART(chuck_num,pos_num,is_top)
    # Arguments:
    #  $chuck_num - 
    #  $pos_num - 
	#  $is_top - 1 for survey position of top, 0 for bottom

	   GOTOIF @LOAD_TOP_DATA_L `$is_top=i=1`
       GOTOIF @LOAD_TOP_DATA_R `$is_top=i=2`
    SETLIGHT 15
    FLEXREAD $tr_local geometry.ETL_mock_base.fid_tr  
    FLEXREAD $tl_local geometry.ETL_mock_base.fid_tl
    FLEXREAD $bl_local geometry.ETL_mock_base.fid_bl
    FLEXREAD $br_local geometry.ETL_mock_base.fid_br

    FLEXREAD $pos_default "default.ETL_mock_base.{$chuck_num}.{$pos_num}.pos"
    FLEXREAD $rot_default "default.ETL_mock_base.{$chuck_num}.{$pos_num}.rot"
    GOTO @END_LOAD
	
	   @LOAD_TOP_DATA_L
    SETLIGHT 15
    FLEXREAD $tr_local geometry.ETL_ETROC_PCB_Mockup_0.fid_tr  
    FLEXREAD $tl_local geometry.ETL_ETROC_PCB_Mockup_0.fid_tl
    FLEXREAD $bl_local geometry.ETL_ETROC_PCB_Mockup_0.fid_bl
    FLEXREAD $br_local geometry.ETL_ETROC_PCB_Mockup_0.fid_br

    FLEXREAD $pos_default "default.ETL_ETROC_PCB_Mockup.{$chuck_num}.{$pos_num}.pos"
    FLEXREAD $rot_default "default.ETL_ETROC_PCB_Mockup.{$chuck_num}.{$pos_num}.rot"
    GOTO @END_LOAD

	   @LOAD_TOP_DATA_R
    SETLIGHT 15
    FLEXREAD $tr_local geometry.ETL_ETROC_PCB_Mockup_1.fid_tr  
    FLEXREAD $tl_local geometry.ETL_ETROC_PCB_Mockup_1.fid_tl
    FLEXREAD $bl_local geometry.ETL_ETROC_PCB_Mockup_1.fid_bl
    FLEXREAD $br_local geometry.ETL_ETROC_PCB_Mockup_1.fid_br

    FLEXREAD $pos_default "default.ETL_ETROC_PCB_Mockup.{$chuck_num}.{$pos_num}.pos"
    FLEXREAD $rot_default "default.ETL_ETROC_PCB_Mockup.{$chuck_num}.{$pos_num}.rot"
    @END_LOAD
	
    #converts the local coordinates to global gantry coordinates usint start location and orientation
    TRANSFORML2G $tr_global $tr_local $pos_default $rot_default
    TRANSFORML2G $tl_global $tl_local $pos_default $rot_default
    TRANSFORML2G $bl_global $bl_local $pos_default $rot_default
    TRANSFORML2G $br_global $br_local $pos_default $rot_default

    #this is to get corrected centers and orientation, the code above gives general area
    #Routine to set up inital position of metal piece
    CALL @ACQUIREFIDUCIAL $tl_global $is_top -> $tl_corrected
    CALL @ACQUIREFIDUCIAL $tr_global $is_top -> $tr_corrected
    CALL @ACQUIREFIDUCIAL $br_global $is_top -> $br_corrected
    CALL @ACQUIREFIDUCIAL $bl_global $is_top -> $bl_corrected

    # Turns measured corners or fiducials into center and orientation
	   GOTOIF @FIT_TOP_L `$is_top=i=1`
       GOTOIF @FIT_TOP_R `$is_top=i=2`
       FIT $pos $rot ETL_mock_base $tr_corrected $br_corrected $bl_corrected $tl_corrected
    GOTO @FINISH_SURVEY
	   @FIT_TOP_L
       FIT $pos $rot ETL_ETROC_PCB_Mockup_0 $tr_corrected $br_corrected $bl_corrected $tl_corrected
    GOTO @FINISH_SURVEY
	   @FIT_TOP_R
       FIT $pos $rot ETL_ETROC_PCB_Mockup_1 $tr_corrected $br_corrected $bl_corrected $tl_corrected
    @FINISH_SURVEY
    QUAT2EULER $phi $_ $_ $rot
    RETURN $pos $phi

@ACQUIREFIDUCIAL(start_pos,is_top)
    # Arguments:
    #  $start_pos - Position to initially search for the fiducial
	
    MOVETO $start_pos 50
    WAIT 100
    AUTOFOCUS $_ 0.36 0 autoclose

    #GOTOIF @manual_fiducial_acquisition $is_top

    SETERRORMODE setvar
    SETLIGHT 20
    FINDFID $fid_position ETL_Baseplate_PCB_Mockup
    SETLIGHT 15
    GOTOIF @manual_fiducial_acquisition $ERR
    SETERRORMODE default
    RETURN $fid_position
    
    @manual_fiducial_acquisition
    SETERRORMODE default
    MPGON
    VIDEO
    getpos $fid_position
    MPGOFF
    RETURN $fid_position